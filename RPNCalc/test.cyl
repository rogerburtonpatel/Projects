%%% A test of all commands for CalcYouLater (except quit). Will print 
%%% #t
%%% #t 
%%% { Did you print true twice? If you did, and nothing else... nice!
%%% It looks like the last set of tests passes. Now diff! }
%%%
%%% to cout (or wherever cout is directed to). Also tests program ending
%%% at end of file. 
%%%
%%% Usage: compile with: ./cylc test.cyl
%%% and run with "file" command or using cin redirect (<)
%%%
%%% NOTE: Requires fact.cylc and fib.cylc. 
%%%
%%% Test 1: Test of ints, bools, math operators, inequalities, and all 
%%% other simple commands. 
%%%
%%% Test 2: Test of exec, file, and if. Uses fact.cylc and fib.cylc. 
%%%
%%% Author: Roger A. Burtonpatel, Tufts University, Spring 2021
%%%

% For your convienence: The top item of the stack at any given time. 

                
         % Top:
1        % 1
2        % 2
+        % 3
3        % 3
==       % #t
4        % 4 
drop     % #t 
2        % 2
2        % 2
*        % 4 
8        % 8
2        % 2
/        % 4 
<        % #f
not      % #t
110      % 110
100      % 100
mod      % 10 
9        % 9
>        % #t
==       % #t
0        % 0
dup      % 0
<=       % #t
==       % #t
9        % 9
10       % 10
>=       % #f  
==       % #f
not      % #t 
swap     % #t 
#f       % #f 
==       % #f
#t       % #t
not      % #f
==       % #t 

print    % #t
clear 

%% Test 2: Test of rstrings, nested rtrings, exec, file, and if. 

5        % 5
{        
1
{       
2
}
}        % { 1 { 2 } }
exec     % { 2 }
exec     % 2 
6        % 6
{       
fact.cylc 
}        % { fact.cylc }
file     % 720 
720      % 720 
==       % #t
{ 1 }    % { 1 } 
{ 2 }    % { 2 }
if       % 1
+        % 3
+        % 4
-        % 1 (gets this from 5 at the beginning of test 2)
1        % 1
==       % #t
8        % 8
6        % 6
{
fib.cylc 
}        % { fib.cylc }
file     % 8
==       % #t 
==       % #t (comparison with #t from line 82)
print    % #t 

{ Did you print true twice? If you did, and nothing else... nice!
It looks like the tests pass. Now diff! }
print
